<?php

/**
 * @file
 * Contains mautic_integration.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\jsonapi\JsonApiResource\ResourceObjectData;
use Drupal\Component\Utility\Html;

/**
 * Implement hook_help().
 */
function mautic_integration_help($route_name) {
  switch ($route_name) {
    case 'help.page.mautic_integration':
      return '<p>' . t('Integrates Mautic with Drupal.') . '</p>';
    default:
      return '';
  }
}

/**
 * Fetch segments for the contact using the Mautic API.
 *
 * @param string $contact_id
 *   The Mautic contact ID.
 *
 * @return array
 *   An array of segment names or empty array on failure.
 */
function mautic_integration_get_segments($contact_id) {
    // Fetch segments for a specific contact from Mautic

  $config = \Drupal::config('mautic_integration.settings');
  
  // Use configured Mautic API credentials
  $api_url = rtrim($config->get('mautic_url'), '/') . '/api/contacts/' . $contact_id . '/segments';
  $username = $config->get('mautic_username');
  $password = $config->get('mautic_password');

  if (!$username || !$password) {
    \Drupal::logger('mautic_integration')->error('Mautic credentials not configured');
    return [];
  }
 // Make HTTP request to Mautic API
  try {
    $response = \Drupal::httpClient()->get($api_url, [
      'headers' => [
        'Authorization' => 'Basic ' . base64_encode("$username:$password"),
        'Accept' => 'application/json',
      ],
      'verify' => FALSE,
      'timeout' => 30,
    ]);

    $data = json_decode($response->getBody()->getContents(), TRUE);

    // Return array of segment names
    $segments = [];
    if (!empty($data['lists'])) {
      foreach ($data['lists'] as $list) {
        $segments[] = $list['name'];
      }
    }
    
    \Drupal::logger('mautic_integration')->notice(
      'Fetched segments for contact @id: @segments',
      ['@id' => $contact_id, '@segments' => implode(', ', $segments)]
    );

    return $segments;
  }
  catch (\Exception $e) {
    \Drupal::logger('mautic_integration')->error(
      'API Error for contact @id: @message',
      ['@id' => $contact_id, '@message' => $e->getMessage()]
    );
    return [];
  }
}